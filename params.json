{
  "name": "Afotache.GitHub.io",
  "tagline": "",
  "body": "---\r\ntitle       : DataProducts App\r\nsubtitle    : impact of weight, cylinders and hp on fuel efficiency\r\nauthor      : Alina Fotache\r\njob         : \r\nframework   : io2012        # {io2012, html5slides, shower, dzslides, ...}\r\nhighlighter : highlight.js  # {highlight.js, prettify, highlight}\r\nhitheme     : tomorrow      # \r\nwidgets     : []            # {mathjax, quiz, bootstrap}\r\nmode        : selfcontained # {standalone, draft}\r\nknit        : slidify::knit2slides\r\n---\r\n\r\n## Introduction\r\n\r\nWe were asked before the following question - \"Are car features like cylinders and horse power driving a car's MPG?\" The DataProducts App has created a prediction model to predict the mpg. The app runs on the data set `mtcars`, which is available with the 'datasets' library.  \r\n\r\nUsing the following features, I created a prediction algorithm to predict the MPG (miles per gallon) for a vehicle:\r\n- `wt` : weight of the vehicle\r\n- `cyl` : number of engine cylinders and \r\n- `hp` : horse power of the engine. \r\n\r\n--- .class #id \r\n\r\n## How does the application work?\r\n\r\nThe shinyUI displays a set of input slider selections for the 3 predictors mentioned in earlier slide. Based on the user selection of the predictors, the UI sends the information to server.r to predict the MPG outcome and to render 2 plots - a histogram of the `mpg` plot along with the predicted value `mu` and the `MSE` (mean squared error).\r\n\r\nThe following boxplot graph shows the MPG values range for the cylynder types. \r\n```{r plotChunk, message=FALSE, fig.height=3, fig.width=3}\r\ndata(mtcars)\r\nboxplot(mpg ~ cyl, xlab=\"Cylinders\", ylab=\"MPG\", data = mtcars,\r\n              col = (c(\"red\", \"blue\")), main=\"MPG versus cylinders\")\r\n```\r\n\r\n--- .class #id \r\n\r\n## User interface\r\n`ui.r`\r\n\r\n```\r\nlibrary(shiny)\r\nshinyUI(\r\n  pageWithSidebar(\r\n    headerPanel(\"Predicting mpg on mtcars dataset\"),\r\n    sidebarPanel(\r\n      p(\"This application will predict the impact of number of cylinders, weight horse power on a vehicle's fuel efficiency, and we show the result in miles per gallon.\"),\r\n      p(\"Please use the sliders to obtain a predicted mpg and 'mu' on the graph to the right.\"),\r\n      p(\"You will observe that changing the parameters below will result in an increase or decrease of miles per gallon. The overall change in mpg depends on the selections of the 3 predictors.\"),\r\n      sliderInput('wt', 'Guess the weight',value = 1, min = 1, max = 5.5, step = 0.5,),\r\n      sliderInput('hp', 'Guess the horsepower',value = 10, min = 50, max = 300, step = 50,),\r\n      numericInput('cyl', 'Guess the cylinders', 2, min=2, max=8, step=2)\r\n    ),\r\n    mainPanel(\r\n      h3(\"Results of prediction model\"),\r\n      plotOutput('weightHistogram'),\r\n      plotOutput('boxPlotcyl')\r\n    )\r\n  )\r\n)\r\n```  \r\n\r\n--- .class #id \r\n\r\n## Server side\r\n`server.r`\r\n```  \r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\nlibrary(caret)\r\nlibrary(datasets)\r\ndata(mtcars)\r\ntrain <- train(mpg ~ cyl+wt+hp, data=mtcars, method=\"lm\")\r\nmpgPred <- function(mtcarsdata) {\r\n  predict(train,newdata=mtcarsdata)\r\n}\r\nshinyServer(\r\n  function(input, output) {\r\n    output$weightHistogram <- renderPlot({\r\n      hist(mtcars$mpg, xlab='MPG (Miles per gallon)', col='orange', main='Histogram')\r\n      mtcarsdata <- data.frame(wt = input$wt, hp = input$hp, cyl = input$cyl)\r\n      mu <- mpgPred (mtcarsdata)\r\n      lines(c(mu, mu), c(0, 20),col=\"black\",lwd=5)\r\n      mse <- mean((mtcars$mpg - mu)^2)\r\n      text(11, 12, paste(\"mu = \", round(mu, 2)))\r\n      text(11, 10, paste(\"MSE = \", round(mse, 2)))\r\n    })\r\n    output$boxPlotcyl <- renderPlot({\r\n      boxplot(mpg ~ cyl, xlab=\"Cylinders\", ylab=\"MPG\", data = mtcars,\r\n              col = (c(\"red\", \"blue\")), main=\"MPG versus cylinders\")\r\n    })\r\n  }    \r\n)  \r\n```\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}